// Code generated by mockery v2.53.2. DO NOT EDIT.

package save

import mock "github.com/stretchr/testify/mock"

// MockURLSaver is an autogenerated mock type for the URLSaver type
type MockURLSaver struct {
	mock.Mock
}

type MockURLSaver_Expecter struct {
	mock *mock.Mock
}

func (_m *MockURLSaver) EXPECT() *MockURLSaver_Expecter {
	return &MockURLSaver_Expecter{mock: &_m.Mock}
}

// SaveURL provides a mock function with given fields: longURL, alias
func (_m *MockURLSaver) SaveURL(longURL string, alias string) error {
	ret := _m.Called(longURL, alias)

	if len(ret) == 0 {
		panic("no return value specified for SaveURL")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string) error); ok {
		r0 = rf(longURL, alias)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockURLSaver_SaveURL_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SaveURL'
type MockURLSaver_SaveURL_Call struct {
	*mock.Call
}

// SaveURL is a helper method to define mock.On call
//   - longURL string
//   - alias string
func (_e *MockURLSaver_Expecter) SaveURL(longURL interface{}, alias interface{}) *MockURLSaver_SaveURL_Call {
	return &MockURLSaver_SaveURL_Call{Call: _e.mock.On("SaveURL", longURL, alias)}
}

func (_c *MockURLSaver_SaveURL_Call) Run(run func(longURL string, alias string)) *MockURLSaver_SaveURL_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(string))
	})
	return _c
}

func (_c *MockURLSaver_SaveURL_Call) Return(_a0 error) *MockURLSaver_SaveURL_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockURLSaver_SaveURL_Call) RunAndReturn(run func(string, string) error) *MockURLSaver_SaveURL_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockURLSaver creates a new instance of MockURLSaver. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockURLSaver(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockURLSaver {
	mock := &MockURLSaver{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
